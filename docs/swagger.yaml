basePath: /
definitions:
  controller.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  dto.ProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    required:
    - description
    - name
    - price
    type: object
  dto.ProductResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  model.Product:
    properties:
      description:
        type: string
      id_product:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
host: localhost:8000
info:
  contact: {}
  description: API for managing products.
  title: Product API
  version: "1.0"
paths:
  /product:
    get:
      consumes:
      - application/json
      description: Get the list of all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Product'
            type: array
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product in the system (ID will be auto-generated and
        cannot be provided)
      parameters:
      - description: Product data (ID will be ignored)
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.ProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ProductResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new product
      tags:
      - products
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Product Deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Delete a product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get a specific product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Product'
            type: array
      summary: Get product by id
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update an existing product by its ID (ID in body must match ID
        in URL)
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated product data (ID cannot be changed)
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/model.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing product
      tags:
      - products
  /product/name:
    get:
      consumes:
      - application/json
      description: Get the list of a specific product
      parameters:
      - description: Product Name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Product'
            type: array
      summary: Get products by name
      tags:
      - products
swagger: "2.0"
